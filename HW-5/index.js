// NORMAL level
// Task 1 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const colors = ['red', 'green', 'blue']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.

console.log(colors.length)

// Task 2 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const animals = ['monkey', 'dog', 'cat']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.

//#1
console.log(animals.reverse()[0])

//#2
console.log(animals[animals.length - 1])

//#3
console.log(animals.pop())

//#4 
console.log(animals.at(-1))

// Task 3 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const numbers = [5, 43, 63, 23, 90]
// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.

// #1
// numbers.length = 0

// #2
// while (0 < numbers.length) {
// 	numbers.pop()
// }

// #3
console.log(numbers.splice())

//–µ—Å–ª–∏ –±—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ —á–µ—Ä–µ–∑ let, —Ç–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —á–µ—Ä–µ–∑ "numbers = []"

// console.log(numbers)

// Task 4 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const students = ['Polina', 'Dasha', 'Masha']
// –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ Borya.
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ Andrey.
// –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.

students.pop()
students.push('Borya')
students.shift()
students.unshift('Andrey')

//#2

// students[0] = 'Andrey'
// students[2] = 'Borya'

console.log(students)

// Task 5 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const cats = ['Gachito', 'Tom', 'Batman']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª for, –∑–∞—Ç–µ–º for of.

for (let i = 0; i < cats.length; i++) {
	console.log(cats[i])
}

for (let i of cats) {
	console.log(i)
}

// Task 6 üñ•
const evenNumbers = [2, 4, 6, 8, 10]
const oddNumbers = [1, 3, 5, 7, 9]
// –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
// –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ 8

const newNumbers = [...evenNumbers, ...oddNumbers]
// const newNumber2 = evenNumbers.concat(oddNumbers)
console.log(newNumbers.indexOf(8))


// Task 7 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const binary = [0, 0, 0, 0]
// –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
// –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.
// [0, 0, 0, 0] -> '0101010'

const newBinary = binary.join(1)

console.log(newBinary)

// ADVANCED level
// –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã for –∏–ª–∏ for of

// Task 1 üë®‚Äçüè´
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.

let word1 = '—à–∞–ª–∞—à'
let word2 = '–Ω–µ —à–∞–ª–∞—à'

console.log(findOutPalindromeOrNot(word1))
console.log(findOutPalindromeOrNot(word2))

function findOutPalindromeOrNot(a) {
	a = a.toLowerCase()
	let arrayOfA = a.split('')
	let result

	for (let i = 0; i < arrayOfA.length; i++) {

		if (arrayOfA[i] == arrayOfA.reverse()[i]) {
			result = 'is palindrome'
		} else {
			result = "isn't palindrome"
		}

	}

	return result
}

// Task 2 üë®‚Äçüè´
const matrix = [
	[12, 98, 78, 65, 23],
	[54, 76, 98, 43, 65],
	[13, 324, 65, 312],
	[9092, 22, 45, 90000],
]
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.

console.log(getMean(matrix))

function getMean(a) {
	let matrixOnTheSameLayer = a.flat(Infinity)
	console.log(matrixOnTheSameLayer.length)
	let sumOfItems = 0

	for (let i = 0; i < matrixOnTheSameLayer.length; i++) {
		sumOfItems += matrixOnTheSameLayer[i]
	}

	let mean = sumOfItems / matrixOnTheSameLayer.length
	return mean
}


// Task 3 üë®‚Äçüè´
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

const mixedNumbers = [-14, 24, -89, 43, 0, -1, 412, 4]

// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

// console.log(findOutPositiveNum(mixedNumbers))
// console.log(findOutNegativeNum(mixedNumbers))

let negativeNum = []
let positiveNum = []

for (let i = 0; i < mixedNumbers.length; i++) {

	if (mixedNumbers[i] < 0) {
		negativeNum.push(mixedNumbers[i])
	} else {
		positiveNum.push(mixedNumbers[i])
	}

}

console.log(negativeNum)
console.log(positiveNum)


// function findOutPositiveNum(a) {
// 	let negativeNum = a.filter(num => num >= 0)
// 	return negativeNum
// }

// function findOutNegativeNum(a) {
// 	let negativeNum = a.filter(num => num < 0)
// 	return negativeNum
// }

//????? –≤ –∑–∞–¥–∞–Ω–∏–∏, –∫–æ–Ω–µ—á–Ω–æ, –Ω–∞–ø–∏—Å–∞–Ω–æ –¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —Ü–∏–∫–ª, –Ω–æ —è –ø–æ–Ω—è–ª–∞, –∫—É–¥–∞ –µ–≥–æ –º–æ–∂–Ω–æ –≤–ø–∏—Ö–Ω—É—Ç—å ?????

// Task 4 üë®‚Äçüè´
// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 5, –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –î–∞–ª–µ–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –≤–æ–∑–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫—É–± –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å.


let arr = []

console.log(getNum(arr))
console.log(changeNum(getNum(arr)))

function getNum(a) {

	for (i = 0; i < 5; i++) {
		let newNumber = Math.floor(Math.random() * 100)
		let newArr = a.push(newNumber) //????? –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–∏–≥–¥–µ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è? –∞ —Ç–æ –º–µ–Ω—è —Å–º—É—â–∞–µ—Ç —Ç–æ, –∫–∞–∫ –æ–Ω–∞ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è, —è –∫–∞–∫ –±—ã –º–æ–≥—É –æ–±—ä—è–≤–∏—Ç—å —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–æ —Ü–∏–∫–ª–∞, —á—Ç–æ–± –æ–Ω–∞ —Ç–∏–ø–∞ –±—ã–ª–∞ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–∞, –Ω–æ –µ—Å—Ç—å –ª–∏ —Ä–µ–∑–æ–Ω?
	}

	return a
}

function changeNum(a) {
	let newValue = []

	// for (let value of a) {
	// 	Value = newValue.push(value ** 3)
	// }

	for (let i = 0; i < a.length / 2; i++) {   //????? –æ–Ω–æ —Ç–æ –∫–∞–∫ –±—ã —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —ç—Ç–æ "/ 2" –º–Ω–µ –Ω–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è, –Ω–æ –±–µ–∑ –Ω–µ–≥–æ, –ø—Ä–∏ –≤—ã–∑–æ–≤–µ "console.log()" –≤–æ 2-–æ–π —Ä–∞–∑, –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —á–∏—Å–µ–ª. —è –∫–∞–∫ –±—ã –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ "function getNum(a)" –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 2 —Ä–∞–∑–∞, –Ω–æ, –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –Ω–µ –∑–Ω–∞—é(((((((((((((((
		let newArr = newValue.push(a[i] ** 3)
	}

	return newValue
}